/*
 * This file is generated by jOOQ.
 */
package com.thee5176.record.springboot_cqrs_command.model;


import com.thee5176.record.springboot_cqrs_command.model.tables.CodeOfAccount;
import com.thee5176.record.springboot_cqrs_command.model.tables.Entries;
import com.thee5176.record.springboot_cqrs_command.model.tables.FlywaySchemaHistory;
import com.thee5176.record.springboot_cqrs_command.model.tables.Transactions;
import com.thee5176.record.springboot_cqrs_command.model.tables.records.CodeOfAccountRecord;
import com.thee5176.record.springboot_cqrs_command.model.tables.records.EntriesRecord;
import com.thee5176.record.springboot_cqrs_command.model.tables.records.FlywaySchemaHistoryRecord;
import com.thee5176.record.springboot_cqrs_command.model.tables.records.TransactionsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CodeOfAccountRecord> CODE_OF_ACCOUNT_PKEY = Internal.createUniqueKey(CodeOfAccount.CODE_OF_ACCOUNT, DSL.name("code_of_account_pkey"), new TableField[] { CodeOfAccount.CODE_OF_ACCOUNT.CODE }, true);
    public static final UniqueKey<EntriesRecord> ENTRIES_PKEY = Internal.createUniqueKey(Entries.ENTRIES, DSL.name("entries_pkey"), new TableField[] { Entries.ENTRIES.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS_PKEY = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("transactions_pkey"), new TableField[] { Transactions.TRANSACTIONS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EntriesRecord, CodeOfAccountRecord> ENTRIES__ENTRIES_COA_FKEY = Internal.createForeignKey(Entries.ENTRIES, DSL.name("entries_coa_fkey"), new TableField[] { Entries.ENTRIES.COA }, Keys.CODE_OF_ACCOUNT_PKEY, new TableField[] { CodeOfAccount.CODE_OF_ACCOUNT.CODE }, true);
}
