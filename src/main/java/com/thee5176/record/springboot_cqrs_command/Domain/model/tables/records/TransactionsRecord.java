/*
 * This file is generated by jOOQ.
 */
package com.thee5176.record.springboot_cqrs_command.Domain.model.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import com.thee5176.record.springboot_cqrs_command.Domain.model.tables.Transactions;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transactions.id</code>.
     */
    public TransactionsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transactions.date</code>.
     */
    public TransactionsRecord setDate(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.transactions.description</code>.
     */
    public TransactionsRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.transactions.created_at</code>.
     */
    public TransactionsRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.transactions.updated_at</code>.
     */
    public TransactionsRecord setUpdatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(UUID id, LocalDate date, String description, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Transactions.TRANSACTIONS);

        setId(id);
        setDate(date);
        setDescription(description);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(com.thee5176.record.springboot_cqrs_command.Domain.model.tables.pojos.Transactions value) {
        super(Transactions.TRANSACTIONS);

        if (value != null) {
            setId(value.getId());
            setDate(value.getDate());
            setDescription(value.getDescription());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
